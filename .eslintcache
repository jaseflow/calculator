[{"/home/jason/dev/calculator/src/index.js":"1","/home/jason/dev/calculator/src/App.js":"2","/home/jason/dev/calculator/src/reportWebVitals.js":"3"},{"size":593,"mtime":1606868009130,"results":"4","hashOfConfig":"5"},{"size":8697,"mtime":1606883282580,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1606592036120,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1d1jrmf",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/jason/dev/calculator/src/index.js",[],["16","17"],"/home/jason/dev/calculator/src/App.js",["18"],"import React, { useState, useEffect } from \"react\";\n\nimport Logo from './Logo.svg';\nimport './App.scss';\n\nimport {\n  Switch,\n  useLocation,\n  useHistory,\n  Link,\n  Route\n} from 'react-router-dom';\n\nconst classNames = require('classnames')\n\nconst steps = [\n  {\n    name: \"Where you're at\",\n    completed: false,\n    helperText: 'General income and super balance',\n    sections: [\n      '/step/current/about-you',\n      '/step/current/other-income'\n    ]\n  },\n  {\n    name: \"Where you want to be\",\n    completed: false,\n    helperText: 'Financial and lifestyle goals',\n    sections: [\n      '/step/future/ideal-retirement',\n      '/step/future/retirement-goals'\n    ]\n  },\n  {\n    name: \"When you will get there\",\n    completed: false,\n    helperText: 'Retirement age to achieve your goals',\n    sections: [\n      '/step/results'\n    ]\n  }\n]\n\nfunction App() {\n  const location = useLocation()\n  const history = useHistory()\n\n  const [stepIndex, setStepIndex] = useState(0)\n  const [sectionIndex, setSectionIndex] = useState(0)\n  const [windowHeight, setWindowHeight] = useState(null)\n\n  function handleSave() {\n    steps[stepIndex].completed = true\n    setStepIndex(stepIndex + 1)\n    setSectionIndex(0)\n  }\n\n  const navLinks = steps.map((step, i) => {\n    const linkClasses = classNames({\n      'Nav__link': true,\n      'Nav__link--active': stepIndex === i,\n      'Nav__link--completed': step.completed\n    })\n    return (\n      <li key={`step-${i}`}>\n        {step.completed || stepIndex === i ?\n          <Link to={steps[i].sections[0]} onClick={() => setStepIndex(i)} className={linkClasses}>\n            <strong>{step.name}</strong>\n            <small>{step.helperText}</small>\n            {step.completed ? \n              <i className=\"far fa-check Nav__icon Nav__icon--tick\"></i>\n              :\n              <i className=\"far fa-chevron-right Nav__icon\"></i>\n            }\n          </Link>\n          :\n          <div className={linkClasses}>\n            <strong>{step.name}</strong>\n            <small>{step.helperText}</small>\n            <i className=\"far fa-chevron-right Nav__icon\"></i>\n          </div>\n        }\n      </li>\n    )\n  })\n\n  useEffect(() => {\n    setWindowHeight(window.innerHeight)\n  },[])\n\n  return (\n    <div className=\"App\">\n      <nav className=\"Nav\" style={{ height: windowHeight }}>\n        <header className=\"Nav__header\">\n          <img src={Logo} alt=\"\" />\n          <div className=\"Nav__blurb\">\n            <h1 className=\"Nav__title\">Got a gap?</h1>\n            <p>To effectively plan for life after work,\n              you should understand how much you need and if you have a gap.\n              This tool will help you identify and make the required adjustments\n              to create the future you want.\n            </p>\n            <p>\n              <i style={{ marginRight : '0.5rem' }} className=\"far fa-stopwatch\"></i>\n              <strong>Takes approximately 15 minutes</strong>\n            </p>\n          </div>\n        </header>\n        <footer className=\"Nav__footer\">\n          <div className=\"Nav__content\">\n            <ul className=\"Nav__steps\">\n              {navLinks}\n            </ul>\n          </div>\n        </footer>\n      </nav>\n      <main className={`Slides ${location.pathname.includes('/step') ? 'Slides--open' : ''}`} style={{ height: windowHeight }}>\n        <div className=\"Slides__wrap\" style={{ height: windowHeight }}>\n          <Switch>\n            <Route path=\"/step/current\">\n              <section className=\"Slides__slide\">\n                <div className=\"container\">\n                  <h1>Where you're at</h1>\n                  <Switch>\n                    <Route path=\"/step/current/about-you\">\n                      <h2>About you</h2>\n                      <p>You will notice we have prefilled information we lready know about you.</p>\n                      <div className=\"form\">\n                        <div className=\"form__row\">\n                          <div className=\"form__group\">\n                            <label className=\"form__label\" htmlFor=\"\">Age</label>\n                            <input type=\"text\" value=\"58\" className=\"form__input form__input--suffixed\" />\n                            <span className=\"form__suffix\">years old</span>\n                          </div>\n                          <div className=\"form__group\">\n                            <label className=\"form__label\" htmlFor=\"\">My salary before tax is</label>\n                            <input type=\"text\" value=\"$150,000\" className=\"form__input form__input--suffixed\" />\n                            <span className=\"form__suffix\">per year</span>\n                          </div>\n                        </div>\n                        <div className=\"form__row\">\n                          <div className=\"form__group\">\n                            <label className=\"form__label\" htmlFor=\"\">My current super balance is</label>\n                            <input type=\"text\" value=\"$500,000\" className=\"form__input\" />\n                          </div>\n                          <div className=\"form__group\">\n                            <label className=\"form__label\" htmlFor=\"\">Extra contributions</label>\n                            <input type=\"text\" value=\"$300\" className=\"form__input form__input--suffixed\" />\n                            <span className=\"form__suffix\">per month</span>\n                          </div>\n                        </div>\n                      </div>\n                    </Route>\n                    <Route path=\"/step/current/other-income\">\n                      <h2>Other income</h2>\n                      <p>If you have any other sources of income plesae add them below.</p>\n                      <button className=\"btn btn--secondary\">\n                        Add another income source <i className=\"far fa-plus\"></i>\n                      </button>\n                    </Route>\n                  </Switch>\n                </div>\n              </section>\n            </Route>\n            <Route path=\"/step/future\">\n              <section className=\"Slides__slide\">\n                <div className=\"container\">\n                  <h1>Where you want to be</h1>\n                  <Switch>\n                    <Route path=\"/step/future/ideal-retirement\">\n                      <h2>Your ideal retirement</h2>\n                      <p>Your current combined income is $200,000 per year. When choosing a retirement income take into account whether you will own your own home or still have kids to support.</p>\n                    </Route>\n                    <Route path=\"/step/future/retirement-goals\">\n                      <h2>Your retirement goals</h2>\n                      <p>Add some retirement goals to help calculate how much you will need.</p>\n                      <button className=\"btn btn--secondary\">Add a retirement goals <i className=\"far fa-plus\"></i></button>\n                    </Route>\n                  </Switch>\n                </div>\n              </section>\n            </Route>\n            <Route path=\"/step/results\">\n              <section className=\"Slides__slide\">\n                <div className=\"container\">\n                  <h1>Results</h1>\n                  <p>Elit amet vel fuga sint doloremque? Laborum quo ea itaque aliquam animi? Dignissimos fuga quas modi repellat sit? Odit incidunt sunt autem eos possimus Esse illo nisi culpa tenetur temporibus</p>\n                </div>\n              </section>\n            </Route>\n          </Switch>\n        </div>\n        <footer className=\"Slides__footer\">\n          <div className=\"container\">\n            { sectionIndex < 1 ? \n              <Link to=\"/\" className=\"Slides__back\">\n                <i className=\"far fa-chevron-left\"></i>\n              </Link>\n              :\n              <Link onClick={() => setSectionIndex(sectionIndex - 1)} to={steps[stepIndex].sections[sectionIndex - 1]} className=\"Slides__back\">\n                <i className=\"far fa-chevron-left\"></i>\n              </Link>\n            }\n            { (sectionIndex + 1) >= steps[stepIndex].sections.length ? \n              <div>\n                <div className=\"show-desktop\">\n                  <Link onClick={handleSave} to={steps[stepIndex + 1].sections[0]} className=\"btn\">Save</Link>\n                </div>\n                <div className=\"show-mobile\">\n                  <Link onClick={handleSave} to=\"/\" className=\"btn\">Save</Link>\n                </div>\n              </div>\n              :\n              <Link onClick={() => setSectionIndex(sectionIndex + 1)} to={steps[stepIndex].sections[sectionIndex + 1]} className=\"btn\">Next</Link>\n            }\n          </div>\n        </footer>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","/home/jason/dev/calculator/src/reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":47,"column":9,"nodeType":"25","messageId":"26","endLine":47,"endColumn":16},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]