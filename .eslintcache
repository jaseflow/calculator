[{"/home/jason/dev/calculator/src/index.js":"1","/home/jason/dev/calculator/src/App.js":"2","/home/jason/dev/calculator/src/reportWebVitals.js":"3","/home/jason/dev/calculator/src/slides/AboutYou.js":"4","/home/jason/dev/calculator/src/slides/OtherIncome.js":"5","/home/jason/dev/calculator/src/slides/RetirementGoals.js":"6","/home/jason/dev/calculator/src/components/Modal.js":"7","/home/jason/dev/calculator/src/components/ModalComfortable.js":"8","/home/jason/dev/calculator/src/components/ModalGoals.js":"9","/home/jason/dev/calculator/src/components/ModalIncome.js":"10","/home/jason/dev/calculator/src/components/ModalModest.js":"11","/home/jason/dev/calculator/src/components/ModalPremium.js":"12","/home/jason/dev/calculator/src/components/ModalSimple.js":"13","/home/jason/dev/calculator/src/slides/Results.js":"14","/home/jason/dev/calculator/src/components/Pie.js":"15","/home/jason/dev/calculator/src/components/IncomeSource.js":"16","/home/jason/dev/calculator/src/resources/plans.js":"17","/home/jason/dev/calculator/src/resources/sources.js":"18","/home/jason/dev/calculator/src/resources/goals.js":"19","/home/jason/dev/calculator/src/components/RetirementGoal.js":"20","/home/jason/dev/calculator/src/components/ContentModest.js":"21","/home/jason/dev/calculator/src/components/ContentComfy.js":"22","/home/jason/dev/calculator/src/components/ContentPremium.js":"23","/home/jason/dev/calculator/src/components/ContentSimple.js":"24","/home/jason/dev/calculator/src/components/Tooltip.js":"25","/home/jason/dev/calculator/src/components/ModalAssumptions.js":"26","/home/jason/dev/calculator/src/components/ModalDisclaimer.js":"27","/home/jason/dev/calculator/src/slides/IdealRetirementDesktop.js":"28","/home/jason/dev/calculator/src/slides/IdealRetirementMobile.js":"29","/home/jason/dev/calculator/src/components/DecisionsStacked.js":"30","/home/jason/dev/calculator/src/components/DecisionsTabbed.js":"31"},{"size":593,"mtime":1607141767950,"results":"32","hashOfConfig":"33"},{"size":21781,"mtime":1611141316370,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1607141767950,"results":"35","hashOfConfig":"33"},{"size":11389,"mtime":1611142656840,"results":"36","hashOfConfig":"33"},{"size":1062,"mtime":1608290046700,"results":"37","hashOfConfig":"33"},{"size":1084,"mtime":1611141316370,"results":"38","hashOfConfig":"33"},{"size":1629,"mtime":1610322137590,"results":"39","hashOfConfig":"33"},{"size":521,"mtime":1607817798350,"results":"40","hashOfConfig":"33"},{"size":859,"mtime":1607743564910,"results":"41","hashOfConfig":"33"},{"size":937,"mtime":1607743564910,"results":"42","hashOfConfig":"33"},{"size":514,"mtime":1607817790480,"results":"43","hashOfConfig":"33"},{"size":519,"mtime":1607817785650,"results":"44","hashOfConfig":"33"},{"size":514,"mtime":1607915401277,"results":"45","hashOfConfig":"46"},{"size":8529,"mtime":1611143356120,"results":"47","hashOfConfig":"33"},{"size":889,"mtime":1608290046700,"results":"48","hashOfConfig":"33"},{"size":2318,"mtime":1608290046700,"results":"49","hashOfConfig":"33"},{"size":587,"mtime":1611141316370,"results":"50","hashOfConfig":"33"},{"size":361,"mtime":1608290046700,"results":"51","hashOfConfig":"33"},{"size":478,"mtime":1607743564910,"results":"52","hashOfConfig":"33"},{"size":1833,"mtime":1610322137590,"results":"53","hashOfConfig":"33"},{"size":1270,"mtime":1608290046700,"results":"54","hashOfConfig":"33"},{"size":1229,"mtime":1608290046700,"results":"55","hashOfConfig":"33"},{"size":1140,"mtime":1608290046700,"results":"56","hashOfConfig":"33"},{"size":1300,"mtime":1608250385963,"results":"57","hashOfConfig":"46"},{"size":548,"mtime":1610322137590,"results":"58","hashOfConfig":"33"},{"size":1484,"mtime":1610322137590,"results":"59","hashOfConfig":"33"},{"size":1379,"mtime":1610322137590,"results":"60","hashOfConfig":"33"},{"size":10093,"mtime":1610322137590,"results":"61","hashOfConfig":"33"},{"size":7627,"mtime":1611141316370,"results":"62","hashOfConfig":"33"},{"size":2985,"mtime":1611141316370,"results":"63","hashOfConfig":"33"},{"size":4821,"mtime":1611141316370,"results":"64","hashOfConfig":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1yovgma",{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"67"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"523m16",{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"/home/jason/dev/calculator/src/index.js",[],["132","133"],"/home/jason/dev/calculator/src/App.js",["134","135","136"],"import React, { useState, useEffect, useRef } from \"react\";\n\nimport LogoDark from './logo--dark.svg';\nimport LogoWhite from './logo--white.png';\nimport bg from './hero.jpg';\nimport './App.scss';\n\nimport AboutYou from './slides/AboutYou'\nimport OtherIncome from './slides/OtherIncome'\nimport IdealRetirementMobile from './slides/IdealRetirementMobile'\nimport IdealRetirementDesktop from './slides/IdealRetirementDesktop'\nimport RetirementGoals from './slides/RetirementGoals'\nimport Results from './slides/Results'\n\nimport Modal from './components/Modal'\n\nimport plans from './resources/plans'\n\nimport { Switch,\n  useLocation,\n  useHistory,\n  Link,\n  Route\n} from 'react-router-dom';\n\nimport smoothscroll from 'smoothscroll-polyfill'\nsmoothscroll.polyfill();\n\nconst classNames = require('classnames')\n\nconst steps = [\n  {\n    name: \"Where you're at\",\n    completed: false,\n    helperText: 'General income and super balance',\n    sections: [\n      '/step/current/about-you',\n      '/step/current/other-income'\n    ]\n  },\n  {\n    name: \"Where you want to be\",\n    completed: false,\n    helperText: 'Financial and lifestyle goals',\n    sections: [\n      '/step/future/ideal-retirement',\n      '/step/future/retirement-goals'\n    ]\n  },\n  {\n    name: \"When can you afford to retire\",\n    completed: false,\n    helperText: 'Retirement age to achieve your goals',\n    sections: [\n      '/step/results'\n    ]\n  }\n]\n\nfunction App() {\n  let location = useLocation()\n  let history = useHistory()\n\n  const wrapper = useRef(null)\n\n  const [stepIndex, setStepIndex] = useState(0)\n  const [sectionIndex, setSectionIndex] = useState(0)\n  const [windowHeight, setWindowHeight] = useState(null)\n  const [acceptedDisc, setAcceptedDisc] = useState(false)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [includePartner, setIncludePartner] = useState(false)\n  const [includePartnerVoluntary, setIncludePartnerVoluntary] = useState('no')\n  const [hasOtherSuper, setHasOtherSuper] = useState('no')\n  const [otherFundsBalance, setOtherFundsBalance] = useState(0)\n  const [footerVisible, setFooterVisible] = useState(false)\n  const [activeModal, setActiveModal] = useState('')\n  const [activePlan, setActivePlan] = useState(plans[0])\n  const [age, setAge] = useState(58)\n  const [deathAge, setDeathAge] = useState(90)\n  const [likelihood, setLikelihood] = useState(75)\n  const [superBalance, setSuperBalance] = useState(500000)\n  const [salary, setSalary] = useState(150000)\n  const [partnerSalary, setPartnerSalary] = useState(0)\n  const [incomeSources, setIncomeSources] = useState([])\n  const [income, setIncome ] = useState(0)\n  const [goals, setGoals] = useState([])\n  const [reqIncome, setReqIncome] = useState(activePlan && activePlan.value && activePlan.value.single)\n  const [employerContributions, setEmployerContributions] = useState('12%')\n  const [memberContributions, setMemberContributions] = useState('6%')\n  const [workingStrategy, setWorkingStrategy] = useState(5)\n  const [retiredStrategy, setRetiredStrategy] = useState(3)\n  const [volContributions, setVolContributions] = useState(150)\n  const [resultLoaded, setResultLoaded] = useState(false)\n  const [viewTotals, setViewTotals] = useState(false)\n\n  function findWithAttr(array, attr, value) {\n    for(var i = 0; i < array.length; i += 1) {\n      if(array[i][attr] === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  function handleLinkClick(e, i) {\n    // Open disclaimer if they're at the start and haven't accepted\n    if(stepIndex === 0 && !acceptedDisc) {\n      e.preventDefault()\n      handleModalOpen('disclaimer')\n    }\n    // Update step indexes when clicking top nav links\n    if (i >= 0) {\n      setStepIndex(i)\n      setSectionIndex(0)\n    }\n  }\n\n  function handleSetOtherFundsBalance(val, i) {\n    setOtherFundsBalance(val)\n  }\n\n  function handleViewToggle(val) {\n    if(val) {\n      const employerPercentage = parseInt(employerContributions.replace('%', ''))\n      const employerTotal = ((employerPercentage / 100) * salary) / 12\n\n      const memberPercentage = parseInt(memberContributions.replace('%', ''))\n      const memberTotal = ((memberPercentage / 100) * salary) / 12\n\n      setEmployerContributions(`$${employerTotal}`)\n      setMemberContributions(`$${memberTotal}`)\n    } else {\n      const employerTotal = parseInt(employerContributions.replace('$', ''))\n      const employerPercentage = ((employerTotal / salary) * 100) * 12\n\n      const memberTotal = parseInt(memberContributions.replace('$', ''))\n      const memberPercentage = ((memberTotal / salary) * 100) * 12\n\n      setEmployerContributions(`${employerPercentage}%`)\n      setMemberContributions(`${memberPercentage}%`)\n    }\n    setViewTotals(val)\n  }\n\n  function handleContinueDisc() {\n    setModalOpen(false)\n    history.push(steps[0].sections[0])\n  }\n\n  function handleAddIncome(val) {\n    let newSources = incomeSources\n    newSources.push(val)\n    setIncomeSources(newSources)\n    setModalOpen(false)\n  }\n\n  function handleCustomIncome(val) {\n    setReqIncome(val)\n  }\n\n  function handleSliderRelease() {\n    if (window.innerWidth > 768) {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      })\n    } else {\n      wrapper.current.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      })\n    }\n    setResultLoaded(false)\n    setTimeout(() => {\n      setResultLoaded(true)\n    }, 1000)\n  }\n\n  function handleGoalClick(val) {\n    let newGoals = goals\n    newGoals.push(val)\n    setGoals(goals)\n    setModalOpen(false)\n  }\n\n  function handleActivePlan(val) {\n    const planIndex = findWithAttr(plans, 'id', val);\n    setActivePlan(plans[planIndex])\n  }\n\n  function handleRemoveIncome(i) {\n    const newSources = incomeSources.filter((item, index) => index !== i)\n    setIncomeSources(newSources)\n    setModalOpen(false)\n  }\n\n  function handleRemoveGoal(i) {\n    const newGoals = goals.filter((item, index) => index !== i)\n    setGoals(newGoals)\n    setModalOpen(false)\n  }\n\n  function handleSave() {\n    steps[stepIndex].completed = true\n    setStepIndex(stepIndex + 1)\n    setSectionIndex(0)\n  }\n\n  function handleModalOpen(modal) {\n    setModalOpen(true)\n    setActiveModal(modal)\n  }\n\n  function handleSetIncomeSourceValue(val, i) {\n    let sources = [...incomeSources]\n    let incomeSource = {...incomeSources[i]}\n    incomeSource.value = parseInt(val)\n    sources[i] = incomeSource\n    setIncomeSources(sources)\n  }\n\n  function handleSetIncomeSourceIncome(val, i) {\n    let sources = [...incomeSources]\n    let incomeSource = {...incomeSources[i]}\n    incomeSource.income = parseInt(val)\n    sources[i] = incomeSource\n    setIncomeSources(sources)\n  }\n\n  function handleSetIncomeSourcePeriod(val, i) {\n    let sources = [...incomeSources]\n    let incomeSource = {...incomeSources[i]}\n    incomeSource.period = val\n    sources[i] = incomeSource\n    setIncomeSources(sources)\n  }\n\n  function handleSetGoalId(val, i) {\n    let newGoals = [...goals]\n    let currentGoal = {...goals[i]}\n    currentGoal.id = val\n    newGoals[i] = currentGoal\n    setGoals(newGoals)\n  }\n\n  function handleSetGoalFrequency(val, i) {\n    let newGoals = [...goals]\n    let currentGoal = {...goals[i]}\n    currentGoal.frequency = val\n    newGoals[i] = currentGoal\n    setGoals(newGoals)\n  }\n\n  function handleSetGoalCost(val, i) {\n    let newGoals = [...goals]\n    let currentGoal = {...goals[i]}\n    currentGoal.cost = parseInt(val)\n    newGoals[i] = currentGoal\n    setGoals(newGoals)\n  }\n\n  useEffect(() => {\n    setWindowHeight(window.innerHeight)\n  },[])\n\n  useEffect(() => {\n    if (includePartner || includePartnerVoluntary === 'yes') {\n      if (window.innerWidth < 768) {\n        wrapper.current.scroll({\n          top: wrapper.current.scrollHeight,\n          left: 0,\n          behavior: 'smooth'\n        })\n      } else {\n        window.scroll({\n          top: wrapper.current.scrollHeight,\n          left: 0,\n          behavior: 'smooth'\n        })\n      }\n    }\n  },[includePartner, includePartnerVoluntary])\n\n  useEffect(() => {\n    let totals = 0\n    incomeSources.forEach((s) => {\n      totals = totals + s.value\n    })\n    setIncome(salary + partnerSalary + totals)\n  },[incomeSources, salary, partnerSalary])\n\n  useEffect(() => {\n    if (activePlan !== 'custom' && includePartner) {\n      setReqIncome(activePlan.value.couple)\n    } else if (activePlan !== 'custom' && !includePartner) {\n      setReqIncome(activePlan.value.single)\n    }\n  },[activePlan, includePartner])\n\n  useEffect(() => {\n    if (location.pathname === '/calculator/' || location.pathname === '/') {\n      setFooterVisible(false)\n    } else if (location.path !== '/' && !footerVisible) {\n      setFooterVisible(true)\n    }\n    if (location.pathname === '/step/results' || location.pathname === '/step/summary') {\n      setFooterVisible(false)\n    }\n    if (location.pathname === '/step/results') {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      })\n      setResultLoaded(true)\n    }\n  },[location, footerVisible])\n\n  let nextButton\n\n  if ((stepIndex + 1) === steps.length) {\n    nextButton = <Link to='/completed' className=\"btn\">Next steps</Link>\n  } else {\n    if ((sectionIndex + 1) >= steps[stepIndex].sections.length) {\n      nextButton = <Link onClick={handleSave} to={steps[stepIndex + 1].sections[0]} className=\"btn\">Next</Link>\n    } else {\n      nextButton = <Link onClick={() => setSectionIndex(sectionIndex + 1)} to={steps[stepIndex].sections[sectionIndex + 1]} className=\"btn\">Next</Link>\n    }\n  }\n\n  const navLinks = steps.map((step, i) => {\n    const linkClasses = classNames({\n      'Nav__link': true,\n      'Nav__link--active': stepIndex === i,\n      'Nav__link--completed': step.completed\n    })\n    return (\n      <li key={`step-${i}`} className=\"flat\">\n        {step.completed || stepIndex === i ?\n          <Link to={steps[i].sections[0]} onClick={(e) => handleLinkClick(e, i)} className={linkClasses}>\n            {step.completed ? \n              <div className=\"Nav__counter Nav__counter--checked\">\n                <i className=\"far fa-check\"></i>\n              </div>\n              :\n              <div className=\"Nav__counter\">{i + 1}</div>\n            }\n            <div>\n              <strong>{step.name}</strong>\n              <small>{step.helperText}</small>\n            </div>\n            <i className=\"far fa-chevron-right Nav__icon\"></i>\n          </Link>\n          :\n          <div className={linkClasses}>\n            {step.completed ? \n              <div className=\"Nav__counter Nav__counter--checked\">\n                <i className=\"far fa-check\"></i>\n              </div>\n              :\n              <div className=\"Nav__counter\">{i + 1}</div>\n            }\n            <div>\n              <strong>{step.name}</strong>\n              <small>{step.helperText}</small>\n            </div>\n            <i className=\"far fa-chevron-right Nav__icon\"></i>\n          </div>\n        }\n      </li>\n    )\n  })\n\n  return (\n    <div className=\"App\">\n      <nav className={`Nav ${location.pathname.includes('/step') ? 'Nav--hidden' : ''}`} style={{ height: windowHeight }}>\n        <header className=\"Nav__header\">\n          <div className=\"Nav__hero\" style={{ backgroundImage: `url(${bg})`}}></div>\n          <div className=\"Nav__blurb\">\n            <img src={LogoWhite} alt=\"\" className=\"Nav__logo\" />\n            <div>\n              <h1 className=\"Nav__title title\">Got a gap?</h1>\n              <p>To effectively plan for life after work,\n                you should understand how much you need and if you have a gap.\n                This tool will help you make the required adjustments to live the life you want.\n              </p>\n              <p>\n                <i style={{ marginRight : '0.5rem'  }} className=\"far fa-stopwatch Nav__clock\"></i>\n                <strong>Takes approximately 15 minutes</strong>\n              </p>\n              <div className=\"Nav__action\">\n                <Link className=\"btn btn--large btn--hero\" onClick={(e) => handleLinkClick(e)} to=\"/step/current/about-you\">Get started</Link>\n              </div>\n            </div>\n          </div>\n        </header>\n        <footer className=\"Nav__footer\">\n          <div className=\"Nav__content\">\n            <Link to=\"/\" onClick={() => setStepIndex(0)}>\n              <img src={LogoDark} alt=\"\" className=\"Nav__inline-logo\" />\n            </Link>\n            <ul className=\"Nav__steps\">\n              {navLinks}\n              <div className=\"Nav__track\">\n                <div className={`Nav__track-bar Nav__track-bar--${stepIndex}`}></div>\n              </div>\n            </ul>\n          </div>\n        </footer>\n      </nav>\n      <main className={`Slides ${location.pathname.includes('/step') ? 'Slides--open' : ''}`} style={{ height: windowHeight }}>\n        <div className=\"Slides__wrap\" ref={wrapper} style={{ height: windowHeight }}>\n          <Switch>\n            <Route path=\"/step/current\">\n              <section className=\"Slides__slide\">\n                <div className=\"container\">\n                  <h1 className=\"Slides__title\">\n                    Where you're at\n                  </h1>\n                  <Switch>\n                    <Route path=\"/step/current/about-you\">\n                      <AboutYou \n                        age={age}\n                        includePartner={includePartner}\n                        includePartnerVoluntary={includePartnerVoluntary}\n                        hasOtherSuper={hasOtherSuper}\n                        volContributions={volContributions}\n                        superBalance={superBalance}\n                        salary={salary}\n                        employerContributions={employerContributions}\n                        memberContributions={memberContributions}\n                        viewTotals={viewTotals}\n                        onSetViewTotals={(val) => handleViewToggle(val)}\n                        onPartnerInclude={() => setIncludePartner(!includePartner)}\n                        onIncludePartnerVoluntary={(val) => setIncludePartnerVoluntary(val)}\n                        onIncludeOtherSuper={(val) => setHasOtherSuper(val)}\n                        onSetOtherFundsBalance={(val) => setOtherFundsBalance(val)}\n                        onSetAge={(val) => setAge(val)}\n                        onSetVolContributions={(val) => setVolContributions(val)}\n                        onSetSuper={(val) => setSuperBalance(val)}\n                        onSetSalary={(val) => setSalary(parseInt(val))}\n                        onSetPartnerSalary={(val) => setPartnerSalary(parseInt(val))}\n                      />\n                    </Route>\n                    <Route path=\"/step/current/other-income\">\n                      <OtherIncome\n                        incomeSources={incomeSources}\n                        onRemoveIncome={(s) => handleRemoveIncome(s)}\n                        onSetIncomeSourceValue={(val, i) => handleSetIncomeSourceValue(val, i)}\n                        onSetIncomeSourceIncome={(val, i) => handleSetIncomeSourceIncome(val, i)}\n                        onSetIncomeSourcePeriod={(val, i) => handleSetIncomeSourcePeriod(val, i)}\n                        onAddIncome={() => handleModalOpen('income')} />\n                    </Route>\n                  </Switch>\n                </div>\n              </section>\n            </Route>\n            <Route path=\"/step/future\">\n              <section className=\"Slides__slide\">\n                <div className=\"container\">\n                  <h1 className=\"Slides__title\">\n                    Where you want to be\n                  </h1>\n                  <Switch>\n                    <Route path=\"/step/future/ideal-retirement\">\n                      <div className=\"show-mobile\">\n                        <IdealRetirementMobile\n                          income={income}\n                          activePlan={activePlan && activePlan.id}\n                          reqIncome={reqIncome}\n                          deathAge={deathAge}\n                          modestIncome={includePartner ? plans[0].value.couple : plans[0].value.single}\n                          comfyIncome={includePartner ? plans[1].value.couple : plans[1].value.single}\n                          premiumIncome={includePartner ? plans[2].value.couple : plans[2].value.single}\n                          includePartner={includePartner}\n                          onSetPlan={(val) => handleActivePlan(val)}\n                          onSetDeathAge={(val) => setDeathAge(val)}\n                          onSetCustomIncome={(val) => setReqIncome(val)}\n                          plans={plans}\n                          onInfoClick={(d) => handleModalOpen(d)}\n                        />\n                      </div>\n                      <div className=\"show-desktop\">\n                        <IdealRetirementDesktop\n                          income={income}\n                          reqIncome={reqIncome}\n                          deathAge={deathAge}\n                          modestIncome={includePartner ? plans[0].value.couple : plans[0].value.single}\n                          comfyIncome={includePartner ? plans[1].value.couple : plans[1].value.single}\n                          premiumIncome={includePartner ? plans[2].value.couple : plans[2].value.single}\n                          includePartner={includePartner}\n                          activePlan={activePlan && activePlan.id}\n                          onSetPlan={(val) => handleActivePlan(val)}\n                          onSetDeathAge={(val) => setDeathAge(val)}\n                          onSetCustomIncome={(val) => setReqIncome(val)}\n                        />\n                      </div>\n                    </Route>\n                    <Route path=\"/step/future/retirement-goals\">\n                      <RetirementGoals\n                        goals={goals}\n                        onRemoveGoal={(i) => handleRemoveGoal(i)}\n                        onAddingGoal={() => handleModalOpen('goals')}\n                        onSetGoalCost={(val, i) => handleSetGoalCost(val, i)}\n                        onSetGoalFrequency={(val, i) => handleSetGoalFrequency(val, i)}\n                        onSetGoalId={(val, i) => handleSetGoalId(val, i)}\n                      />\n                    </Route>\n                  </Switch>\n                </div>\n              </section>\n            </Route>\n            <Route path=\"/step/results\">\n              <Results\n                reqIncome={reqIncome}\n                canConsolidate={hasOtherSuper === 'yes'}\n                incomeSources={incomeSources}\n                goals={goals}\n                volContributions={volContributions}\n                retiredStrategy={retiredStrategy}\n                workingStrategy={workingStrategy}\n                deathAge={deathAge}\n                likelihood={likelihood}\n                loaded={resultLoaded}\n                onOpenModal={(modal) => handleModalOpen(modal)}\n                onRemoveIncome={(s) => handleRemoveIncome(s)}\n                onRemoveGoal={(i) => handleRemoveGoal(i)}\n                onSetWorkingStrategy={(val) => setWorkingStrategy(val)}\n                onSetRetiredStrategy={(val) => setRetiredStrategy(val)}\n                onSetReqIncome={(val) => setReqIncome(val)}\n                onSliderRelease={() => handleSliderRelease()}\n                onSetVolContributions={(val) => setVolContributions(val)}\n                onSetIncomeSourceValue={(val, i) => handleSetIncomeSourceValue(val, i)}\n                onSetIncomeSourceIncome={(val, i) => handleSetIncomeSourceIncome(val, i)}\n                onSetIncomeSourcePeriod={(val, i) => handleSetIncomeSourcePeriod(val, i)}\n                onSetGoalCost={(val, i) => handleSetGoalCost(val, i)}\n                onSetGoalFrequency={(val, i) => handleSetGoalFrequency(val, i)}\n                onSetGoalId={(val, i) => handleSetGoalId(val, i)}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </main>\n      <footer className={`Slides__footer ${footerVisible ? 'Slides__footer--visible' : ''}`}>\n        <div className=\"container\">\n          <div className=\"Slides__actions\">\n            { sectionIndex < 1 ? \n              <Link to=\"/\" className={`Slides__back ${sectionIndex === 0 ? 'Slides__back--first' : ''}`}>\n                <i className=\"far fa-chevron-left\"></i>\n              </Link>\n              :\n              <Link onClick={() => setSectionIndex(sectionIndex - 1)} to={steps[stepIndex].sections[sectionIndex - 1]} className=\"Slides__back\">\n                <i className=\"far fa-chevron-left\"></i>\n              </Link>\n            }\n          </div>\n          <div class=\"Slides__next\">\n            <div onClick={() => handleModalOpen('assumptions')} className=\"Settings\">\n              <span class=\"Settings__label\">Settings</span>\n              <i className=\"fa fa-cog\"></i>\n            </div>\n            {nextButton}\n          </div>\n        </div>\n      </footer>\n      <Modal\n        modestIncome={includePartner ? plans[0].value.couple : plans[0].value.single}\n        comfyIncome={includePartner ? plans[1].value.couple : plans[1].value.single}\n        premiumIncome={includePartner ? plans[2].value.couple : plans[2].value.single}\n        deathAge={deathAge}\n        likelihood={likelihood}\n        onIncomeClick={(val) => handleAddIncome(val)}\n        onGoalClick={(val) => handleGoalClick(val)}\n        onSetDeathAge={(val) => setDeathAge(val)}\n        onSetLikelihood={(val) => setLikelihood(val)}\n        active={activeModal} \n        open={modalOpen}\n        acceptedDisc={acceptedDisc}\n        onDismiss={() => setModalOpen(false)}\n        onAcceptDisc={() => setAcceptedDisc(!acceptedDisc)}\n        onContinueDisc={handleContinueDisc}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/home/jason/dev/calculator/src/reportWebVitals.js",[],"/home/jason/dev/calculator/src/slides/AboutYou.js",[],"/home/jason/dev/calculator/src/slides/OtherIncome.js",[],"/home/jason/dev/calculator/src/slides/RetirementGoals.js",[],"/home/jason/dev/calculator/src/components/Modal.js",[],"/home/jason/dev/calculator/src/components/ModalComfortable.js",[],"/home/jason/dev/calculator/src/components/ModalGoals.js",[],"/home/jason/dev/calculator/src/components/ModalIncome.js",[],"/home/jason/dev/calculator/src/components/ModalModest.js",[],"/home/jason/dev/calculator/src/components/ModalPremium.js",[],"/home/jason/dev/calculator/src/components/ModalSimple.js",[],["137","138"],"/home/jason/dev/calculator/src/slides/Results.js",["139","140","141","142","143","144","145"],"import React from 'react';\n\nimport Pie from '../components/Pie'\n\nimport consolidateImg from '../consolidate.png'\nimport consolidateBadge from '../consolidate-badge.png'\nimport singleImg from '../single.png'\nimport superHealthCheckImg from '../superhealthcheck.png'\nimport comprehensiveImg from '../comprehensive.png'\nimport referImg from '../refer-white.png'\nimport printImg from '../form.svg'\n\nimport IncomeSource from '../components/IncomeSource'\nimport RetirementGoal from '../components/RetirementGoal'\nimport DecisionsStacked from '../components/DecisionsStacked'\nimport DecisionsTabbed from '../components/DecisionsTabbed'\n\nimport NumberFormat from 'react-number-format'\nimport Slider from 'react-rangeslider'\nimport 'react-rangeslider/lib/index.css'\n\nfunction Results(props) {\n\n  const sources = props.incomeSources.map((s, i) => {\n    return (\n      <IncomeSource\n        key={`income-${s.id}`}\n        value={s.value}\n        income={s.income}\n        period={s.period}\n        onRemove={() => props.onRemoveIncome(i)}\n        onSetIncomeSourceValue={(val) => props.onSetIncomeSourceValue(val, i)}\n        onSetIncomeSourcePeriod={(val) => props.onSetIncomeSourcePeriod(val, i)}\n        onSetIncomeSourceIncome={(val) => props.onSetIncomeSourceIncome(val, i)}\n        id={s.id}\n      />\n    )\n  })\n\n  const goals = props.goals.map((s, i) => {\n    return (\n      <RetirementGoal\n        key={`goal-${s.id}`}\n        onRemove={() => props.onRemoveGoal(i)}\n        onSetGoalFrequency={(val) => props.onSetGoalCost(val, i)}\n        onSetGoalId={(val) => props.onSetGoalId(val, i)}\n        onSetGoalCost={(val) => props.onSetGoalCost(val, i)}\n        id={s.id}\n        cost={s.cost}\n        frequency={s.frequency}\n      />\n    )\n  })\n\n  return (\n    <div className={`Results ${props.loaded ? 'Results--loaded' : ''}`}>\n      <div className=\"Results__hero\">\n        <h1 className=\"Results__title desktop-title\">\n          When can you retire?\n        </h1>\n        <div className=\"Results__age\">\n          <div className=\"Results__copy\">\n            <span>Retire at</span>\n            <strong>66</strong>\n            <small>High likelihood of your money lasting</small>\n          </div>\n          <div className=\"Results__age-bg\"></div>\n          <div className=\"Results__pie\">\n            <Pie stroke={20} radius={120} progress={props.likelihood} />\n          </div>\n        </div>\n      </div>\n      <div className=\"Results__body\">\n        <div className=\"container\">\n          <p className=\"Results__blurb\">You can retire at age <strong>66</strong> and spend <br /><strong><NumberFormat value={props.reqIncome} displayType={'text'} thousandSeparator={true} prefix={'$'} /> </strong> per year with a high likelihood <br/>of your money lasting till age <strong>{props.deathAge}</strong>.</p>\n          <hr className=\"Results__hr\" />\n          <h2>Review your decisions</h2>\n          <div class=\"show-mobile\">\n            <DecisionsStacked \n              reqIncome={props.reqIncome}\n              volContributions={props.volContributions}\n              workingStrategy={props.workingStrategy}\n              retiredStrategy={props.retiredStrategy}\n            />\n          </div>\n          <div className=\"show-desktop\">\n            <DecisionsTabbed\n              reqIncome={props.reqIncome}\n              volContributions={props.volContributions}\n              workingStrategy={props.workingStrategy}\n              onSliderRelease={() => props.onSliderRelease()}\n              onSetReqIncome={(val) => props.onSetReqIncome(val)}\n              onSetRetiredStrategy={(val) => props.onSetRetiredStrategy(val)}\n              onSetVolContributions={(val) => props.onSetVolContributions(val)}\n              onSetWorkingStrategy={(val) => props.onSetWorkingStrategy(val)}\n              retiredStrategy={props.retiredStrategy}\n            />\n          </div>\n          <div hidden>\n            <hr className=\"Results__hr\" />\n            <section className=\"Results__section\">\n              <div className=\"Results__goals-title\">\n                <h2>Income sources</h2>\n                <span className=\"link\" onClick={() => props.onOpenModal('income')}>Add income</span>\n              </div>\n              {sources.length ?\n                sources\n                :\n                <p>No other income sources added</p>\n              }\n            </section>\n          </div>\n          <section className=\"Results__section\">\n            <div className=\"Results__goals-title\">\n              <h2>Review your goals</h2>\n              <span className=\"link\" onClick={() => props.onOpenModal('goals')}>Add a goal</span>\n            </div>\n            {goals.length ?\n              goals\n              :\n              <p className=\"flat\">No retirement goals added</p>\n            }\n          </section>\n        </div>\n      </div>\n      { props.canConsolidate ?\n        <div class=\"Results__consolidate\">\n          <div className=\"container\">\n            <img src={consolidateBadge} alt=\"\" class=\"show-desktop\" />\n            <div>\n              <h1 className=\"desktop-title\">Consolidate today</h1>\n              <p>By consolidating all your superannuation into your one account, you could save thousands of dollars in administration fees over your working life. This is money that could be growing for your retirement.</p>\n              <a href=\"#\" class=\"btn btn--large Results__cta\">Get started</a>\n            </div>\n          </div>\n        </div>\n        :\n        null\n      }\n      <div className=\"Results__footer\">\n        <div className=\"container\">\n          <div className=\"Results__actions\">\n            <div>\n              <h1 class=\"desktop-title\">Next steps</h1>\n              <div className=\"Results__block\">\n                <img src={superHealthCheckImg} alt=\"\" />\n                <div class=\"Results__wrap\">\n                  <h2 className=\"flat\">Super Health Checks</h2>\n                  <p>Covers broad recommendations that do not take into account your personal circumstances.</p>\n                  <a href=\"https://www.lgiasuper.com.au/superannuation/super-health-check\" class=\"btn btn--tertiary Results__action\">\n                    Book now\n                  </a>\n                </div>\n              </div>\n              <div className=\"Results__block\">\n                <img src={singleImg} />\n                <div class=\"Results__wrap\">\n                  <h2 className=\"flat\">Generate your report</h2>\n                  <p>Save and print a detailed report of this calculator to share with your partner or financial advisor.</p>\n                  <a href=\"https://memberonline.lgiasuper.com.au/find-my-super/declaration-and-consent\" class=\"btn btn--tertiary Results__action\">\n                    Download PDF\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div className=\"Results__refer\">\n              <img src={referImg} alt=\"\" />\n              <div class=\"Results__wrap\">\n                <h2 className=\"flat\">Special offer to members</h2>\n                <p>Invite family and friends to join and you could pocket up to $400 in vouchers and they could receive a $150 voucher.</p>\n                <a href=\"\" class=\"btn btn--block Results__action\">\n                  Refer now\n                </a>\n              </div>\n            </div>\n          </div>\n          <footer class=\"Results__legal text-centered\">\n            <nav>\n              <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.lgiasuper.com.au/about-us/governance/reports-and-policies/disclaimer\">\n                Disclaimer\n              </a>\n              <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.lgiasuper.com.au/about-us/contact-us\">\n                Contact\n              </a>\n              <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.lgiasuper.com.au/about-us/governance\">\n                Governance\n              </a>\n              <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.lgiasuper.com.au/about-us/governance/reports-and-policies/privacy\">\n                Privacy\n              </a>\n              <a target=\"_blank\" rel=\"noreferrer\" href=\"https://www.lgiasuper.com.au/about-us/site-map\">\n                Site map\n              </a>\n            </nav>\n            <p>\n              <small>LGIAsuper Trustee ABN 94 085 088 484</small>\n              <small>AFS Licence No. 230511</small>\n              <small>LGIAsuper ABN 23 053 121 564</small>\n            </p>\n          </footer>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Results\n","/home/jason/dev/calculator/src/components/Pie.js",[],"/home/jason/dev/calculator/src/components/IncomeSource.js",[],"/home/jason/dev/calculator/src/resources/plans.js",[],"/home/jason/dev/calculator/src/resources/sources.js",[],"/home/jason/dev/calculator/src/resources/goals.js",[],"/home/jason/dev/calculator/src/components/RetirementGoal.js",[],"/home/jason/dev/calculator/src/components/ContentModest.js",[],"/home/jason/dev/calculator/src/components/ContentComfy.js",[],"/home/jason/dev/calculator/src/components/ContentPremium.js",[],"/home/jason/dev/calculator/src/components/ContentSimple.js",[],"/home/jason/dev/calculator/src/components/Tooltip.js",[],"/home/jason/dev/calculator/src/components/ModalAssumptions.js",[],"/home/jason/dev/calculator/src/components/ModalDisclaimer.js",[],"/home/jason/dev/calculator/src/slides/IdealRetirementDesktop.js",["146"],"import React from 'react';\n\nimport CurrencyInput from 'react-currency-input-field'\nimport NumberFormat from 'react-number-format'\n\nimport Slider from 'react-rangeslider'\nimport 'react-rangeslider/lib/index.css'\n\nimport Tooltip from '../components/Tooltip'\n\nimport repairs from '../icons/green/9.png'\nimport appliances from '../icons/green/2.png'\nimport utility from '../icons/green/1.png'\nimport food from '../icons/green/3.png'\nimport phone from '../icons/green/4.png'\nimport clothes from '../icons/green/5.png'\nimport travel from '../icons/green/6.png'\nimport health from '../icons/green/7.png'\nimport car from '../icons/green/8.png'\nimport leisure from '../icons/green/10.png'\n\nimport asfa from '../asfa.png'\nimport lgia from '../inline.png'\n\nfunction IdealRetirementDesktop(props) {\n\n  const labels = {\n    27978: 'Modest',\n    43901: 'Comfortable',\n    80000: 'Premium'\n  }\n\n  return (\n    <div className=\"IdealRetirement\">\n      <p>Your current income is <NumberFormat value={props.income} prefix={'$'} thousandSeparator={true} displayType={'text'}/> per year. When choosing a retirement income take into account whether you will own your own home or still have kids to support.</p>\n      <div className=\"form__slider\">\n        <label htmlFor=\"\" class=\"form__label form__label--range\">\n          How long do you need your money to last?\n          <strong>\n            {props.deathAge}\n          </strong>\n        </label>\n        <Slider\n          min={60}\n          max={100}\n          tooltip={false}\n          value={props.deathAge}\n          onChange={(val) => props.onSetDeathAge(val)}\n        />\n      </div>\n      <div className=\"form__slider form__slider--labels\">\n        <label htmlFor=\"\" class=\"form__label form__label--range\">\n          How much income will you need?\n          <strong>\n            <NumberFormat\n              value={props.reqIncome}\n              displayType={'text'}\n              thousandSeparator={true}\n              prefix={'$'}\n            /> \n            &nbsp; / year\n          </strong>\n        </label>\n        <Slider\n          min={10000}\n          max={100000}\n          tooltip={false}\n          step={500}\n          labels={labels}\n          value={props.reqIncome}\n          onChange={(val) => props.onSetCustomIncome(val)}\n        />\n      </div>\n      <h2>Retirement lifestyle information</h2>\n      <table className=\"RetirementPlans\">\n        <thead>\n          <tr>\n            <th></th>\n            <th>\n              <div className=\"RetirementPlans__standard\">\n                <img src={asfa} alt=\"\" />\n                <Tooltip>\n                  <p>The budgets for comfortable and modest retirement lifestyles are calculations from the Association of Superannuation Funds of Australia (ASFA) Retirement Standard, September quarter 2020.</p>\n                </Tooltip>\n              </div>\n              <h3 className=\"flat\">Modest</h3>\n              <p className=\"flat\">\n                <NumberFormat\n                  value={props.modestIncome}\n                  displayType={'text'}\n                  thousandSeparator={true}\n                  prefix={'$'}\n                /> \n                &nbsp;yearly income\n                {props.includePartner ?\n                  <i className=\"fas fa-user-friends Plan__person\"></i>\n                  :\n                  <i className=\"fas fa-user Plan__person\"></i>\n                }\n              </p>\n              <button\n                className={`btn ${props.activePlan === 'modest' ? '' : 'btn--secondary'} RetirementPlans__select`}\n                onClick={() => props.onSetPlan('modest')} >\n                {props.activePlan === 'modest' ? 'Selected' : 'Select'}\n              </button>\n            </th>\n            <th>\n              <div className=\"RetirementPlans__standard\">\n                <img src={asfa} alt=\"\" />\n                <Tooltip>\n                  <p>The budgets for comfortable and modest retirement lifestyles are calculations from the Association of Superannuation Funds of Australia (ASFA) Retirement Standard, September quarter 2020.</p>\n                </Tooltip>\n              </div>\n              <h3 className=\"flat\">Comfortable</h3>\n              <p className=\"flat\">\n                <NumberFormat\n                  value={props.comfyIncome}\n                  displayType={'text'}\n                  thousandSeparator={true}\n                  prefix={'$'}\n                /> \n                &nbsp;yearly income\n                {props.includePartner ?\n                  <i className=\"fas fa-user-friends Plan__person\"></i>\n                  :\n                  <i className=\"fas fa-user Plan__person\"></i>\n                }\n              </p>\n              <button\n                className={`btn ${props.activePlan === 'comfy' ? '' : 'btn--secondary'} RetirementPlans__select`}\n                onClick={() => props.onSetPlan('comfy')} >\n                {props.activePlan === 'comfy' ? 'Selected' : 'Select'}\n              </button>\n            </th>\n            <th>\n              <div className=\"RetirementPlans__standard\">\n                <img src={lgia} alt=\"\" />\n                <Tooltip>\n                  <p>The budget for a premium retirement lifestyle is an estimate by LGIAsuper, independent to the ASFA Retirement Standard.</p>\n                </Tooltip>\n              </div>\n              <h3 className=\"flat\">Premium</h3>\n              <p className=\"flat\">\n                <NumberFormat\n                  value={props.premiumIncome}\n                  displayType={'text'}\n                  thousandSeparator={true}\n                  prefix={'$'}\n                /> \n                &nbsp;yearly income\n                {props.includePartner ?\n                  <i className=\"fas fa-user-friends Plan__person\"></i>\n                  :\n                  <i className=\"fas fa-user Plan__person\"></i>\n                }\n              </p>\n              <button\n                className={`btn ${props.activePlan === 'premium' ? '' : 'btn--secondary'} RetirementPlans__select`}\n                onClick={() => props.onSetPlan('premium')} >\n                {props.activePlan === 'premium' ? 'Selected' : 'Select'}\n              </button>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <img src={repairs} alt=\"\" />\n            </td>\n            <td>\n              No budget for home improvements. Can do maintenance repairs\n            </td>\n            <td>\n              Replace kitchen and bathroom over 20 years\n            </td>\n            <td>\n              Full home renovation\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <img src={appliances} alt=\"\" />\n            </td>\n            <td>\n              Limited number of household items and appliances\n            </td>\n            <td>\n              Better quality, larger number of household items and appliances\n            </td>\n            <td>\n              High end, larger number of appliances\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <img src={utility} alt=\"\" />\n            </td>\n            <td>\n              Need to watch utility costs\n            </td>\n            <td>\n              Can run air conditioning\n            </td>\n            <td>\n              Fully air conditioned house and maintain swimming pool\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <img src={food} alt=\"\" />\n            </td>\n            <td>\n              Take out and occasional cheap restaurants\n            </td>\n            <td>\n              Restaurant dining, good range and quality of food\n            </td>\n            <td>\n              Dines in expensive a la carte restaurants\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <img src={phone} alt=\"\" />\n            </td>\n            <td>\n              Limited talk and text, modest internet data allowance\n            </td>\n            <td>\n              4G internet connection, big data large talk and text allowance\n            </td>\n            <td>\n              NBN Fast internet connection, big data allowance\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <img src={clothes} alt=\"\" />\n            </td>\n            <td>\n              Reasonable clothes\n            </td>\n            <td>\n              Good clothes\n            </td>\n            <td>\n              Designer clothes\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <img src={travel} alt=\"\" />\n            </td>\n            <td>\n              One holiday in Australia or a few short breaks\n            </td>\n            <td>\n              Domestic and occasional overseas holidays\n            </td>\n            <td>\n              Business class flights\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <img src={health} alt=\"\" />\n            </td>\n            <td>\n              Basic private health insurance, limited gap payments\n            </td>\n            <td>\n              Mid level private health insurance\n            </td>\n            <td>\n              Top level private health insurance\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <img src={car} alt=\"\" />\n            </td>\n            <td>\n              Owning a cheaper more basic car\n            </td>\n            <td>\n              Owning a reasonable car\n            </td>\n            <td>\n              New car every 3-5 years\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <img src={leisure} alt=\"\" />\n            </td>\n            <td>\n              One leisure activity infrequently, some trips to the cinema or the like\n            </td>\n            <td>\n              Take part in a range of regular leisure activities\n            </td>\n            <td>\n              Member of exclusive clubs and groups\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default IdealRetirementDesktop\n","/home/jason/dev/calculator/src/slides/IdealRetirementMobile.js",[],"/home/jason/dev/calculator/src/components/DecisionsStacked.js",[],"/home/jason/dev/calculator/src/components/DecisionsTabbed.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":74,"column":10,"nodeType":"153","messageId":"154","endLine":74,"endColumn":27},{"ruleId":"151","severity":1,"message":"155","line":118,"column":12,"nodeType":"153","messageId":"154","endLine":118,"endColumn":38},{"ruleId":"151","severity":1,"message":"156","line":157,"column":12,"nodeType":"153","messageId":"154","endLine":157,"endColumn":30},{"ruleId":"147","replacedBy":"157"},{"ruleId":"149","replacedBy":"158"},{"ruleId":"151","severity":1,"message":"159","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":22},{"ruleId":"151","severity":1,"message":"160","line":9,"column":8,"nodeType":"153","messageId":"154","endLine":9,"endColumn":24},{"ruleId":"151","severity":1,"message":"161","line":11,"column":8,"nodeType":"153","messageId":"154","endLine":11,"endColumn":16},{"ruleId":"151","severity":1,"message":"162","line":19,"column":8,"nodeType":"153","messageId":"154","endLine":19,"endColumn":14},{"ruleId":"163","severity":1,"message":"164","line":133,"column":15,"nodeType":"165","endLine":133,"endColumn":63},{"ruleId":"166","severity":1,"message":"167","line":156,"column":17,"nodeType":"165","endLine":156,"endColumn":40},{"ruleId":"163","severity":1,"message":"164","line":171,"column":17,"nodeType":"165","endLine":171,"endColumn":67},{"ruleId":"151","severity":1,"message":"168","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":21},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'otherFundsBalance' is assigned a value but never used.","Identifier","unusedVar","'handleSetOtherFundsBalance' is defined but never used.","'handleCustomIncome' is defined but never used.",["169"],["170"],"'consolidateImg' is defined but never used.","'comprehensiveImg' is defined but never used.","'printImg' is defined but never used.","'Slider' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'CurrencyInput' is defined but never used.","no-global-assign","no-unsafe-negation"]