[{"/home/jason/dev/calculator/src/index.js":"1","/home/jason/dev/calculator/src/App.js":"2","/home/jason/dev/calculator/src/reportWebVitals.js":"3","/home/jason/dev/calculator/src/slides/AboutYou.js":"4","/home/jason/dev/calculator/src/slides/OtherIncome.js":"5","/home/jason/dev/calculator/src/slides/IdealRetirement.js":"6","/home/jason/dev/calculator/src/slides/RetirementGoals.js":"7","/home/jason/dev/calculator/src/components/Modal.js":"8","/home/jason/dev/calculator/src/components/ModalComfortable.js":"9","/home/jason/dev/calculator/src/components/ModalGoals.js":"10","/home/jason/dev/calculator/src/components/ModalIncome.js":"11","/home/jason/dev/calculator/src/components/ModalModest.js":"12","/home/jason/dev/calculator/src/components/ModalPremium.js":"13","/home/jason/dev/calculator/src/components/ModalSimple.js":"14","/home/jason/dev/calculator/src/slides/Results.js":"15","/home/jason/dev/calculator/src/components/Pie.js":"16","/home/jason/dev/calculator/src/components/IncomeSource.js":"17","/home/jason/dev/calculator/src/resources/plans.js":"18","/home/jason/dev/calculator/src/resources/sources.js":"19","/home/jason/dev/calculator/src/resources/goals.js":"20","/home/jason/dev/calculator/src/components/RetirementGoal.js":"21","/home/jason/dev/calculator/src/components/ContentModest.js":"22","/home/jason/dev/calculator/src/components/ContentComfy.js":"23","/home/jason/dev/calculator/src/components/ContentPremium.js":"24","/home/jason/dev/calculator/src/components/ContentSimple.js":"25"},{"size":593,"mtime":1607141767950,"results":"26","hashOfConfig":"27"},{"size":15343,"mtime":1607771270990,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1607141767950,"results":"29","hashOfConfig":"27"},{"size":7186,"mtime":1607771278040,"results":"30","hashOfConfig":"27"},{"size":900,"mtime":1607743564910,"results":"31","hashOfConfig":"27"},{"size":5415,"mtime":1607817437480,"results":"32","hashOfConfig":"27"},{"size":874,"mtime":1607743564910,"results":"33","hashOfConfig":"27"},{"size":1072,"mtime":1607743564910,"results":"34","hashOfConfig":"27"},{"size":521,"mtime":1607817798350,"results":"35","hashOfConfig":"27"},{"size":859,"mtime":1607743564910,"results":"36","hashOfConfig":"27"},{"size":937,"mtime":1607743564910,"results":"37","hashOfConfig":"27"},{"size":514,"mtime":1607817790480,"results":"38","hashOfConfig":"27"},{"size":519,"mtime":1607817785650,"results":"39","hashOfConfig":"27"},{"size":514,"mtime":1607817781050,"results":"40","hashOfConfig":"27"},{"size":9018,"mtime":1607757259360,"results":"41","hashOfConfig":"27"},{"size":891,"mtime":1607472018780,"results":"42","hashOfConfig":"27"},{"size":1675,"mtime":1607743564910,"results":"43","hashOfConfig":"27"},{"size":787,"mtime":1607770021980,"results":"44","hashOfConfig":"27"},{"size":343,"mtime":1607743564910,"results":"45","hashOfConfig":"27"},{"size":478,"mtime":1607743564910,"results":"46","hashOfConfig":"27"},{"size":1641,"mtime":1607743564910,"results":"47","hashOfConfig":"27"},{"size":1266,"mtime":1607771030080,"results":"48","hashOfConfig":"27"},{"size":1225,"mtime":1607771033110,"results":"49","hashOfConfig":"27"},{"size":1136,"mtime":1607771027280,"results":"50","hashOfConfig":"27"},{"size":1335,"mtime":1607771023000,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1yovgma",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},"/home/jason/dev/calculator/src/index.js",[],["105","106"],"/home/jason/dev/calculator/src/App.js",["107"],"import React, { useState, useEffect, useRef } from \"react\";\n\nimport LogoDark from './logo--dark.svg';\nimport LogoWhite from './logo--white.png';\nimport bg from './hero.jpg';\nimport './App.scss';\n\nimport AboutYou from './slides/AboutYou'\nimport OtherIncome from './slides/OtherIncome'\nimport IdealRetirement from './slides/IdealRetirement'\nimport RetirementGoals from './slides/RetirementGoals'\nimport Results from './slides/Results'\n\nimport Modal from './components/Modal'\n\nimport plans from './resources/plans'\n\nimport { Switch,\n  useLocation,\n  Link,\n  Route\n} from 'react-router-dom';\n\nimport smoothscroll from 'smoothscroll-polyfill'\nsmoothscroll.polyfill();\n\nconst classNames = require('classnames')\n\nconst steps = [\n  {\n    name: \"Where you're at\",\n    completed: false,\n    helperText: 'General income and super balance',\n    sections: [\n      '/step/current/about-you',\n      '/step/current/other-income'\n    ]\n  },\n  {\n    name: \"Where you want to be\",\n    completed: false,\n    helperText: 'Financial and lifestyle goals',\n    sections: [\n      '/step/future/ideal-retirement',\n      '/step/future/retirement-goals'\n    ]\n  },\n  {\n    name: \"When can you afford to retire\",\n    completed: false,\n    helperText: 'Retirement age to achieve your goals',\n    sections: [\n      '/step/results'\n    ]\n  }\n]\n\nfunction App() {\n  let location = useLocation()\n\n  const wrapper = useRef(null)\n\n  const [progress, setProgress] = useState(0)\n  const [stepIndex, setStepIndex] = useState(0)\n  const [sectionIndex, setSectionIndex] = useState(0)\n  const [windowHeight, setWindowHeight] = useState(null)\n  const [modalOpen, setModalOpen] = useState(false)\n  const [includePartner, setIncludePartner] = useState(false)\n  const [includePartnerVoluntary, setIncludePartnerVoluntary] = useState('no')\n  const [footerVisible, setFooterVisible] = useState(false)\n  const [activeModal, setActiveModal] = useState('')\n  const [activePlan, setActivePlan] = useState(plans[0])\n  const [age, setAge] = useState(58)\n  const [retAge, setRetAge] = useState(66)\n  const [superBalance, setSuperBalance] = useState(500000)\n  const [salary, setSalary] = useState(150000)\n  const [partnerSalary, setPartnerSalary] = useState(0)\n  const [incomeSources, setIncomeSources] = useState([])\n  const [income, setIncome ] = useState(0)\n  const [goals, setGoals] = useState([])\n  const [reqIncome, setReqIncome] = useState(activePlan.value.single)\n  const [workingStrategy, setWorkingStrategy] = useState(5)\n  const [retiredStrategy, setRetiredStrategy] = useState(3)\n  const [contributions, setContributions] = useState(150)\n  const [resultLoaded, setResultLoaded] = useState(false)\n\n  function findWithAttr(array, attr, value) {\n    for(var i = 0; i < array.length; i += 1) {\n      if(array[i][attr] === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  function handleAddIncome(val) {\n    let newSources = incomeSources\n    newSources.push(val)\n    setIncomeSources(newSources)\n    setModalOpen(false)\n  }\n\n  function handleSliderRelease() {\n    if (window.innerWidth > 768) {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      })\n    } else {\n      wrapper.current.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      })\n    }\n    setResultLoaded(false)\n    setProgress(0)\n    setTimeout(() => {\n      setResultLoaded(true)\n      setProgress(82)\n    }, 1000)\n  }\n\n  function handleGoalClick(val) {\n    let newGoals = goals\n    newGoals.push(val)\n    setGoals(goals)\n    setModalOpen(false)\n  }\n\n  function handleActivePlan(val) {\n    const planIndex = findWithAttr(plans, 'id', val);\n    setActivePlan(plans[planIndex])\n  }\n\n  function handleRemoveIncome(i) {\n    const newSources = incomeSources.filter((item, index) => index !== i)\n    setIncomeSources(newSources)\n    setModalOpen(false)\n  }\n\n  function handleRemoveGoal(i) {\n    const newGoals = goals.filter((item, index) => index !== i)\n    setGoals(newGoals)\n    setModalOpen(false)\n  }\n\n  function handleSave() {\n    steps[stepIndex].completed = true\n    setStepIndex(stepIndex + 1)\n    setSectionIndex(0)\n  }\n\n  function handleModalOpen(modal) {\n    setModalOpen(true)\n    setActiveModal(modal)\n  }\n\n  function handleSetIncomeSourceValue(val, i) {\n    let sources = [...incomeSources]\n    let incomeSource = {...incomeSources[i]}\n    incomeSource.value = parseInt(val)\n    sources[i] = incomeSource\n    setIncomeSources(sources)\n  }\n\n  useEffect(() => {\n    setWindowHeight(window.innerHeight)\n  },[])\n\n  useEffect(() => {\n    if (includePartner || includePartnerVoluntary === 'yes') {\n      if (window.innerWidth < 768) {\n        wrapper.current.scroll({\n          top: wrapper.current.scrollHeight,\n          left: 0,\n          behavior: 'smooth'\n        })\n      } else {\n        window.scroll({\n          top: wrapper.current.scrollHeight,\n          left: 0,\n          behavior: 'smooth'\n        })\n      }\n    }\n  },[includePartner, includePartnerVoluntary])\n\n  useEffect(() => {\n    let totals = 0\n    incomeSources.forEach((s) => {\n      totals = totals + s.value\n    })\n    setIncome(salary + partnerSalary + totals)\n  },[incomeSources, salary, partnerSalary])\n\n  useEffect(() => {\n    if (location.pathname === '/calculator/' || location.pathname === '/') {\n      setFooterVisible(false)\n    } else if (location.path !== '/' && !footerVisible) {\n      setFooterVisible(true)\n    }\n    if (location.pathname === '/step/results' || location.pathname === '/step/summary') {\n      setFooterVisible(false)\n    }\n    if (location.pathname === '/step/results') {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      })\n      setResultLoaded(true)\n      setTimeout(() => {\n        setProgress(75)\n      }, 750)\n    }\n  },[location, footerVisible])\n\n  let nextButton\n\n  if ((stepIndex + 1) === steps.length) {\n    nextButton = <Link to='/completed' className=\"btn\">Next steps</Link>\n  } else {\n    if ((sectionIndex + 1) >= steps[stepIndex].sections.length) {\n      nextButton = <Link onClick={handleSave} to={steps[stepIndex + 1].sections[0]} className=\"btn\">Save</Link>\n    } else {\n      nextButton = <Link onClick={() => setSectionIndex(sectionIndex + 1)} to={steps[stepIndex].sections[sectionIndex + 1]} className=\"btn\">Next</Link>\n    }\n  }\n\n  const navLinks = steps.map((step, i) => {\n    const linkClasses = classNames({\n      'Nav__link': true,\n      'Nav__link--active': stepIndex === i,\n      'Nav__link--completed': step.completed\n    })\n    return (\n      <li key={`step-${i}`} className=\"flat\">\n        {step.completed || stepIndex === i ?\n          <Link to={steps[i].sections[0]} onClick={() => setStepIndex(i)} className={linkClasses}>\n            {step.completed ? \n              <div className=\"Nav__counter Nav__counter--checked\">\n                <i className=\"far fa-check\"></i>\n              </div>\n              :\n              <div className=\"Nav__counter\">{i + 1}</div>\n            }\n            <div>\n              <strong>{step.name}</strong>\n              <small>{step.helperText}</small>\n            </div>\n            <i className=\"far fa-chevron-right Nav__icon\"></i>\n          </Link>\n          :\n          <div className={linkClasses}>\n            {step.completed ? \n              <div className=\"Nav__counter Nav__counter--checked\">\n                <i className=\"far fa-check\"></i>\n              </div>\n              :\n              <div className=\"Nav__counter\">{i + 1}</div>\n            }\n            <div>\n              <strong>{step.name}</strong>\n              <small>{step.helperText}</small>\n            </div>\n            <i className=\"far fa-chevron-right Nav__icon\"></i>\n          </div>\n        }\n      </li>\n    )\n  })\n\n  return (\n    <div className=\"App\">\n      <nav className={`Nav ${location.pathname.includes('/step') ? 'Nav--hidden' : ''}`} style={{ height: windowHeight }}>\n        <header className=\"Nav__header\">\n          <div className=\"Nav__hero\" style={{ backgroundImage: `url(${bg})`}}></div>\n          <div className=\"Nav__blurb\">\n            <img src={LogoWhite} alt=\"\" className=\"Nav__logo\" />\n            <div>\n              <h1 className=\"Nav__title\">Got a gap?</h1>\n              <p>To effectively plan for life after work,\n                you should understand how much you need and if you have a gap.\n                This tool will help you make the required adjustments to live the life you want.\n              </p>\n              <p>\n                <i style={{ marginRight : '0.5rem'  }} className=\"far fa-stopwatch Nav__clock\"></i>\n                <strong>Takes approximately 15 minutes</strong>\n              </p>\n              <div className=\"Nav__action\">\n                <Link className=\"btn btn--hero\" to=\"/step/current/about-you\">Get started</Link>\n              </div>\n            </div>\n          </div>\n        </header>\n        <footer className=\"Nav__footer\">\n          <div className=\"Nav__content\">\n            <Link to=\"/\">\n              <img src={LogoDark} alt=\"\" className=\"Nav__inline-logo\" />\n            </Link>\n            <ul className=\"Nav__steps\">\n              {navLinks}\n              <div className=\"Nav__track\">\n                <div className={`Nav__track-bar Nav__track-bar--${stepIndex}`}></div>\n              </div>\n            </ul>\n          </div>\n        </footer>\n      </nav>\n      <main className={`Slides ${location.pathname.includes('/step') ? 'Slides--open' : ''}`} style={{ height: windowHeight }}>\n        <div className=\"Slides__wrap\" ref={wrapper} style={{ height: windowHeight }}>\n          <Switch>\n            <Route path=\"/step/current\">\n              <section className=\"Slides__slide\">\n                <div className=\"container\">\n                  <h1 className=\"Slides__title\">\n                    Where you're at\n                  </h1>\n                  <Switch>\n                    <Route path=\"/step/current/about-you\">\n                      <AboutYou \n                        age={age}\n                        includePartner={includePartner}\n                        includePartnerVoluntary={includePartnerVoluntary}\n                        contributions={contributions}\n                        superBalance={superBalance}\n                        salary={salary}\n                        onPartnerInclude={() => setIncludePartner(!includePartner)}\n                        onIncludePartnerVoluntary={(val) => setIncludePartnerVoluntary(val)}\n                        onSetAge={(val) => setAge(val)}\n                        onSetContributions={(val) => setContributions(val)}\n                        onSetSuper={(val) => setSuperBalance(val)}\n                        onSetSalary={(val) => setSalary(parseInt(val))}\n                        onSetPartnerSalary={(val) => setPartnerSalary(parseInt(val))}\n                      />\n                    </Route>\n                    <Route path=\"/step/current/other-income\">\n                      <OtherIncome\n                        incomeSources={incomeSources}\n                        onRemoveIncome={(s) => handleRemoveIncome(s)}\n                        onSetIncomeSourceValue={(val, i) => handleSetIncomeSourceValue(val, i)}\n                        onAddIncome={() => handleModalOpen('income')} />\n                    </Route>\n                  </Switch>\n                </div>\n              </section>\n            </Route>\n            <Route path=\"/step/future\">\n              <section className=\"Slides__slide\">\n                <div className=\"container\">\n                  <h1 className=\"Slides__title\">\n                    Where you want to be\n                  </h1>\n                  <Switch>\n                    <Route path=\"/step/future/ideal-retirement\">\n                      <IdealRetirement\n                        simpleIncome={includePartner ? plans[0].value.couple : plans[0].value.single}\n                        modestIncome={includePartner ? plans[1].value.couple : plans[1].value.single}\n                        comfyIncome={includePartner ? plans[2].value.couple : plans[2].value.single}\n                        premiumIncome={includePartner ? plans[3].value.couple : plans[3].value.single}\n                        includePartner={includePartner}\n                        onSetPlan={(val) => handleActivePlan(val)}\n                        onSetRetirementAge={(val) => setRetAge(val)}\n                        retirementAge={retAge}\n                        activePlan={activePlan.id}\n                        plans={plans}\n                        onInfoClick={(d) => handleModalOpen(d)}\n                      />\n                    </Route>\n                    <Route path=\"/step/future/retirement-goals\">\n                      <RetirementGoals\n                        goals={goals}\n                        onRemoveGoal={(i) => handleRemoveGoal(i)}\n                        onAddingGoal={() => handleModalOpen('goals')}\n                      />\n                    </Route>\n                  </Switch>\n                </div>\n              </section>\n            </Route>\n            <Route path=\"/step/results\">\n              <Results\n                progress={progress}\n                reqIncome={reqIncome}\n                incomeSources={incomeSources}\n                goals={goals}\n                retirementAge={retAge}\n                contributions={contributions}\n                retiredStrategy={retiredStrategy}\n                workingStrategy={workingStrategy}\n                loaded={resultLoaded}\n                onOpenModal={(modal) => handleModalOpen(modal)}\n                onSetProgress={(val) => setProgress(val)}\n                onSetIncomeSourceValue={(val, i) => handleSetIncomeSourceValue(val, i)}\n                onSetWorkingStrategy={(val) => setWorkingStrategy(val)}\n                onSetRetiredStrategy={(val) => setRetiredStrategy(val)}\n                onSetReqIncome={(val) => setReqIncome(val)}\n                onSliderRelease={() => handleSliderRelease()}\n                onSetContributions={(val) => setContributions(val)}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </main>\n      <footer className={`Slides__footer ${footerVisible ? 'Slides__footer--visible' : ''}`}>\n        <div className=\"container\">\n          { sectionIndex < 1 ? \n            <Link to=\"/\" className={`Slides__back ${sectionIndex === 0 ? 'Slides__back--first' : ''}`}>\n              <i className=\"far fa-chevron-left\"></i>\n            </Link>\n            :\n            <Link onClick={() => setSectionIndex(sectionIndex - 1)} to={steps[stepIndex].sections[sectionIndex - 1]} className=\"Slides__back\">\n              <i className=\"far fa-chevron-left\"></i>\n            </Link>\n          }\n          <div>\n            {nextButton}\n          </div>\n        </div>\n      </footer>\n      <Modal\n        simpleIncome={includePartner ? plans[0].value.couple : plans[0].value.single}\n        modestIncome={includePartner ? plans[1].value.couple : plans[1].value.single}\n        comfyIncome={includePartner ? plans[2].value.couple : plans[2].value.single}\n        premiumIncome={includePartner ? plans[3].value.couple : plans[3].value.single}\n        onIncomeClick={(val) => handleAddIncome(val)}\n        onGoalClick={(val) => handleGoalClick(val)}\n        active={activeModal} \n        open={modalOpen}\n        onDismiss={() => setModalOpen(false)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/home/jason/dev/calculator/src/reportWebVitals.js",[],"/home/jason/dev/calculator/src/slides/AboutYou.js",[],"/home/jason/dev/calculator/src/slides/OtherIncome.js",[],"/home/jason/dev/calculator/src/slides/IdealRetirement.js",[],"/home/jason/dev/calculator/src/slides/RetirementGoals.js",[],"/home/jason/dev/calculator/src/components/Modal.js",[],"/home/jason/dev/calculator/src/components/ModalComfortable.js",[],"/home/jason/dev/calculator/src/components/ModalGoals.js",[],"/home/jason/dev/calculator/src/components/ModalIncome.js",[],"/home/jason/dev/calculator/src/components/ModalModest.js",[],"/home/jason/dev/calculator/src/components/ModalPremium.js",[],"/home/jason/dev/calculator/src/components/ModalSimple.js",[],"/home/jason/dev/calculator/src/slides/Results.js",[],"/home/jason/dev/calculator/src/components/Pie.js",[],"/home/jason/dev/calculator/src/components/IncomeSource.js",[],"/home/jason/dev/calculator/src/resources/plans.js",[],"/home/jason/dev/calculator/src/resources/sources.js",[],"/home/jason/dev/calculator/src/resources/goals.js",[],"/home/jason/dev/calculator/src/components/RetirementGoal.js",[],"/home/jason/dev/calculator/src/components/ContentModest.js",[],"/home/jason/dev/calculator/src/components/ContentComfy.js",[],"/home/jason/dev/calculator/src/components/ContentPremium.js",[],"/home/jason/dev/calculator/src/components/ContentSimple.js",["108"],"import React from 'react'\n\nimport SimpleHero from '../simple.jpg'\nimport NumberFormat from 'react-number-format'\n\nfunction ContentSimple(props) {\n  return (\n    <div>\n      <h2 class=\"flat\">Simple retirement</h2>\n      <p>\n        <NumberFormat\n        value={props.income}\n        displayType={'text'}\n        thousandSeparator={true}\n        prefix={'$'} />\n        <span>&nbsp;</span>anually\n      </p>\n      <p>The Age Pension is a fortnightly payment to eligible Australians that can help provide an income if you do not have engouh financial resources (such as super) to retire.</p>\n      <h3>Available lifestyle</h3>\n      <ul>\n        <li>No budget to fix home problems like a leaky roof</li>\n        <li>Less frequent hair cuts or getting a friend to cut your hair</li>\n        <li>Less heating in winter</li>\n        <li>Only club special meals or inexpensive takeaway</li>\n        <li>Very basic phone and internet package</li>\n        <li>Basic clothes</li>\n        <li>Even shorter breaks or day trips in your own city</li>\n        <li>No private health insurance</li>\n        <li>No car or, if you have a car it will be a struggle to afford repairs</li>\n        <li>Only taking part in no cost or very low cost leisure activities. Rare trips to the cinema.</li>\n      </ul>\n    </div>\n  )\n}\n\nexport default ContentSimple\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":79,"column":10,"nodeType":"115","messageId":"116","endLine":79,"endColumn":16},{"ruleId":"113","severity":1,"message":"117","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":18},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'income' is assigned a value but never used.","Identifier","unusedVar","'SimpleHero' is defined but never used.","no-global-assign","no-unsafe-negation"]